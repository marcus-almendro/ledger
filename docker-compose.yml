version: '3'
services:
  
  ledger-api:
    image: ledger-api:0.1
    ports:
      - "3000:3000"
    depends_on: 
      - rabbitmq
    environment:
      ACCOUNT_SERVICE_ADDRESS: accountClusterLoadBalancer:8080
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    networks: 
      frontend:
      backend:

  transfer:
    image: transfersystem:0.1
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_QOS: 100
      ACCOUNT_CLUSTER_HOSTNAME: accountClusterLoadBalancer
      ACCOUNT_CLUSTER_PORT: 8080
    networks:
        backend:

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - ./setup/rabbitmq-definitions.json:/opt/definitions.json:ro
      - ./setup/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
    networks: 
      backend:
  
  accountSync:
    image: accountsync:0.1
    networks:
      backend:

  accountClusterLoadBalancer:
    image: nginx:latest
    volumes:
      - ./setup/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on: 
      - accountClusterNode1
      - accountClusterNode2
      - accountClusterNode3
    networks:
      backend:

  accountClusterNode1:
    image: accountcluster:0.1
    environment:
      HOSTNAME: 172.16.0.21
    shm_size: '2gb'
    networks:
      backend:
        ipv4_address: 172.16.0.21

  accountClusterNode2:
    image: accountcluster:0.1
    environment:
      HOSTNAME: 172.16.0.22
    shm_size: '2gb'
    networks:
      backend:
        ipv4_address: 172.16.0.22

  accountClusterNode3:
    image: accountcluster:0.1
    environment:
      HOSTNAME: 172.16.0.23
    shm_size: '2gb'
    networks:
      backend:
        ipv4_address: 172.16.0.23

  eventstore1:
    image: eventstore/eventstore:latest
    env_file:
      - ./setup/event-store-common.env
    environment:
      - EVENTSTORE_GOSSIP_SEED=172.16.0.12:2112,172.16.0.13:2112
      - EVENTSTORE_NODE_PRIORITY=3
      - EVENTSTORE_EXT_IP=172.16.0.11
    ports:
      - 1113:1113
      - 2113:2113
    restart: always
    healthcheck:
        test: ["CMD-SHELL", "curl -sf http://localhost:2113/stats || exit 1"]
        interval: 5s
        timeout: 2s
    networks:
      backend:
        ipv4_address: 172.16.0.11
        
  eventstore2:
    image: eventstore/eventstore:latest
    env_file:
      - ./setup/event-store-common.env
    environment:
      - EVENTSTORE_GOSSIP_SEED=172.16.0.11:2112,172.16.0.13:2112
      - EVENTSTORE_NODE_PRIORITY=2
      - EVENTSTORE_EXT_IP=172.16.0.12
    ports:
      - 1123:1113
      - 2123:2113
    restart: always
    healthcheck:
        test: ["CMD-SHELL", "curl -sf http://localhost:2123/stats || exit 1"]
        interval: 5s
        timeout: 2s
    networks:
      backend:
        ipv4_address: 172.16.0.12
    
  eventstore3:
    image: eventstore/eventstore:latest
    env_file:
      - ./setup/event-store-common.env
    environment:
      - EVENTSTORE_GOSSIP_SEED=172.16.0.11:2112,172.16.0.12:2112
      - EVENTSTORE_NODE_PRIORITY=1
      - EVENTSTORE_EXT_IP=172.16.0.13
    ports:
      - 1133:1113
      - 2133:2113
    restart: always
    healthcheck:
        test: ["CMD-SHELL", "curl -sf http://localhost:2133/stats || exit 1"]
        interval: 5s
        timeout: 2s
    networks:
      backend:
        ipv4_address: 172.16.0.13

  cassandra1:
    image: cassandra:latest
    ports:
      - "9042:9042"
    environment:
      - "MAX_HEAP_SIZE=256M"
      - "HEAP_NEWSIZE=128M"
    restart: always
    networks:
      backend:

  cassandra2:
    image: cassandra:latest
    environment:
      - "CASSANDRA_SEEDS=cassandra1"
      - "MAX_HEAP_SIZE=256M"
      - "HEAP_NEWSIZE=128M"
    depends_on:
      - "cassandra1"
    restart: always
    networks:
      backend:

  cassandra3:
    image: cassandra:latest
    environment:
      - "CASSANDRA_SEEDS=cassandra1"
      - "MAX_HEAP_SIZE=256M"
      - "HEAP_NEWSIZE=128M"
    depends_on:
      - "cassandra1"
    restart: always
    networks:
      backend:

  cassandra-load-keyspace:
    image: cassandra:latest
    depends_on:
      - cassandra1
    volumes:
      - ./setup/cassandra_schema.cql:/schema.cql 
    command: /bin/bash -c "sleep 90 && echo loading cassandra keyspace && cqlsh cassandra1 -f /schema.cql"
    networks:
      backend:

networks:
  frontend:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.16.1.0/24
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.16.0.0/24